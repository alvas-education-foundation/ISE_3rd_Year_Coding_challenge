Question1:We are given 3 strings: str1, str2, and str3. Str3 is said to be a shuffle of str1 and str2 
if it can be formed by interleaving the characters of str1 and str2 in a way that maintains 
the left to right ordering of the characters from each string. 
For example, given str1="abc" and str2="def", str3="dabecf" is a valid shuffle since it preserves 
the character ordering of the two strings. So, given these 3 strings write a function that detects 
whether str3 is a valid shuffle of str1 and str2.
SOLUTION:
def check(str1,str2,str3):
    shuffle =  str1+str2
    c1 = "".join(sorted(shuffle))
    c2 = "".join(sorted(str3))
    if c1 == c2:
        print("True")
    else:
        print("False")    


str1 = input()
str2 = input()
str3 = input()
check(str1,str2,str3) 



Question2:
Write a function that accepts a single string input and returns the first non-repeated character.
SOLUTION:
import java.util.*;
public class Main {
 public static void main(String[] args) {
  String str1 = "gibblegabbler";
  System.out.println("The given string is: " + str1);
  for (int i = 0; i < str1.length(); i++) {
   boolean unique = true;
   for (int j = 0; j < str1.length(); j++) {
    if (i != j && str1.charAt(i) == str1.charAt(j)) {
     unique = false;
     break;
    }
   }
   if (unique) {
    System.out.println("The first non repeated character in String is: " + str1.charAt(i));
    break;
   }
  }
 }
} 