01. Write a program in java for fibonocci series using for loop



import java.util.Scanner;
class Fibonacci
{
	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("enter number of terms");
		int n=sc.nextInt();
		int i=0,j=1,nextTerm;
		System.out.println("Fibonacci series is ");
		for(int c=0;c<n;c++)
		{
			if(c<=1)
				nextTerm=c;
			else
			{
				nextTerm=i+j;
				i=j;
				j=nextTerm;
			}
			System.out.println(nextTerm);
		}
	}
}



02. Write a program to calculate perimeter of Rhombus




import java.util.Scanner;
class PerimeterOfRhombus
{
   public static void main(String args[]) 
    {   
      	 Scanner s= new Scanner(System.in);
         System.out.println("Enter the side of the Rhombus:");
         double a= s.nextDouble();
         double  perimeter=4*a;
	 System.out.println("perimeter of Rhombus is: " + perimeter);      
   }
}




03. Write a java program to convert Fahrenhit to celsious using switch case method




import java.util.Scanner;
class FC
{
	public static void main(String arg[])	
	{
	    double f,c;
             	    Scanner sc=new Scanner(System.in);
	    System.out.println("Choose type of conversion \n 1.Fahrenheit to Celsius  \n 2.Celsius to Fahrenheit");
                   int ch=sc.nextInt();
	    switch(ch)
	    {
	    case 1:  System.out.println("Enter  Fahrenheit temperature");
                   	  f=sc.nextDouble();
	    	  c=(f-32)*5/9;
	    	  System.out.println("Celsius temperature is = "+c);
		  break;
	    case 2:  System.out.println("Enter  Celsius temperature");
                   	  c=sc.nextDouble();
	    	  f=((9*c)/5)+32;
	    	  System.out.println("Fahrenheit temperature is = "+f);
		  break;
	   default:  System.out.println("please choose valid choice");
	   }  
	} 
}





04. Write a java program to implement heap sort algorithm




import java.util.Scanner;
public class HSort
{ 
	public static void heapify(int a[],int i,int n)
	{ 
 		int l=2*i+1;
		int r=2*i+2;
 		int temp,largest;
 		if(l<n && a[l]>a[i])
			largest=l;
		else
			largest=i;
 		if(r<n && a[r]>a[largest])
			largest=r;
 		if(largest !=i)
		{
			temp=a[largest];
			a[largest]=a[i];
			a[i]=temp;
 			heapify(a,largest,n);
		}
 	}
 	public static void bheap(int a[])
	{ 
 		for(int i=(a.length/2)-1;i>=0;i--)
		{
 			heapify(a,i,a.length);
 		}
 	}
 	public static void Sort(int a[])
	{ 
		int temp,j,i;
 		bheap(a);
 		for( i=(a.length)-1; i>0;)
		{
			temp=a[0];
			a[0]=a[i];
			a[i]=temp;
			heapify(a,0,i--) ;
 		}
	} 
 	public static void printarray(int a[])
	{
		System.out.println();
		for(int i=0; i < a.length; i++)
		{
 			System.out.print(a[i]+" ");
		}
 	}
	public static void main(String[] args) 
	{
		int n, res,i;
		Scanner s = new Scanner(System.in);
		System.out.print("Enter number of elements in the array:");
		n = s.nextInt();
		int a[] = new int[n];
		System.out.println("Enter "+n+" elements ");
		for( i=0; i < n; i++)
		{
			a[i] = s.nextInt();
		} 
		System.out.println( "elements in array ");
		printarray(a);
		Sort(a);
		System.out.println( "\nelements after sorting");
		printarray(a);
 	}
}






