1)

from __future__ import print_function
k = raw_input()
def even(x):
    if x.isdigit():
        if int(x)%2 ==0:
            return True
        else: return False
    else: return True
print (*sorted(k,key = lambda x:(x.isdigit(),even(x),x.isupper(),x)),sep='')


2)

import math
import os
import random
import re
import sys

if __name__ == '__main__':
    s = input()

    occu_dict = {}
    for i in range(len(s)):
        if s[i] in occu_dict:
            occu_dict[s[i]] = (s[i], occu_dict[s[i]][1]+1)
        else:
            occu_dict[s[i]] = (s[i], 1)

    order_dict = sorted(occu_dict.values(), key=lambda x:(-x[1],x[0]))

    print('\n'.join(list(map(lambda x: x[0]+' '+str(x[1]), order_dict[:3]))))




3)


from collections import defaultdict,deque
T = input()
D = defaultdict(list)

def ordAsc(A):
    return all(A[i] <= A[i+1] for i in range(len(A)-1))

for i in xrange(T):
    k = input()
    D[i].append(map(int,raw_input().split()))

for y in D:
    l = D[y][0].index(min(D[y][0]))
    if ordAsc(D[y][0][l:]):
        print 'Yes'
    else:
        print 'No'

4)


N = int(input())
  arr = []
  for i in range(1,N+1):
         arr.append(i)
         print(arr+arr[-2: :-1])


5)

import re
k = re.compile("^[a-zA-Z][\w-]*@[a-zA-Z0-9]+\.[a-zA-Z]{1,3}$")
lst = [raw_input() for _ in xrange(input())]
lst = filter(k.match, lst)
print sorted(lst) 