1)Develop the programs in c, c++, java or python to the solve the following problem statements
Activity 1:
Given an array, , of  integers, calculate and print the respective mean, median, and mode on separate lines. If your array contains more than one modal value, choose the numerically smallest one.
Input format:
1.The first line contains an integer, N, denoting the number of elements in the array.

2.The second line contains  N space-separated integers describing the array's elements.

Output format:
Print  lines of output in the following order:
1.Print the mean on a new line, to a scale of  decimal place 
2.Print the median on a new line, to a scale of  decimal place 
3.Print the mode on a new line; if more than one such value exists, print the numerically smallest one.
Constraints:
•N belongs to [10, 2500]
•X belongs to [0, 10000]

Program:

#include <bits/stdc++.h> 
using namespace std; 
  
double findMean(int a[], int n) 
{ 
    int sum = 0; 
    for (int i = 0; i < n; i++)  
        sum += a[i]; 
      
    return (double)sum/(double)n; 
} 
  
double findMedian(int a[], int n) 
{ 
    sort(a, a+n); 
    if (n % 2 != 0) 
       return (double)a[n/2]; 
      
    return (double)(a[(n-1)/2] + a[n/2])/2.0; 
} 
  
int main() 
{ 
    int n;
    cout<<"Enter number of elements : ";
    cin>>n;
    int a[n]; 
    cout<<"Enter elements: ";
    for(int i=0;i<n;i++)
        cin>>a[i];
    int mode=a[0], mx=1, cnt=1;
    for(auto i=0;i<n-1;i++)
    {
        if(a[i]==a[i+1]) {
            ++cnt;
        }
        else 
            cnt=1;
        if(cnt>mx) 
        {
            mx=cnt;
            mode=a[i];
        }
    }
    cout << "Mean = " << findMean(a, n) << endl;  
    cout << "Median = " << findMedian(a, n) << endl;  
    cout<<"Mode="<<mode;
    return 0; 
} 






















   