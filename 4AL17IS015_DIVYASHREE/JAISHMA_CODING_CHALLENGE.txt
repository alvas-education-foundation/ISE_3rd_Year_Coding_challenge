Given an input integer, you must determine which primitive data types are capable of properly storing that input.
import java.util.*;
import java.io.*;
class Solution{
    public static void main(String []args)
    {
        Scanner sc = new Scanner(System.in);
        int t=sc.nextInt();
        for(int i=0;i<t;i++)
        {
            try
            {
                long x=sc.nextLong();
                System.out.println(x+" can be fitted in:");
                if(x>=-128 && x<=127)
		  System.out.println("* byte");
                if(x >= -Math.pow(2, 15) && x <= Math.pow(2, 15) - 1)
                  System.out.println("* short");
            	if(x >= -Math.pow(2, 31) && x <= Math.pow(2, 31) - 1)
                  System.out.println("* int");
            	if(x >= -Math.pow(2, 63) && x <= Math.pow(2, 63) - 1)
                  System.out.println("* long");
            }
            catch(Exception e)
            {
                System.out.println(sc.next()+" can't be fitted anywhere.");
            }

        }
    }
}
P-2:
Given an integer, N , print its first  10 multiples. Each multiple N (where 1<=i<=10) should be printed on a new line in the form: N x i = result.

n = int(input())
for i in range(1,11):
    o=(n*i)
    print(n," * ",i," = ",o)



#include<iostream>
int main()
{
	int n;
	cin>>n;
	if(n%2!=0)
		cout<<"Weird";
	else if(n%2==0 and n>=2 and n<=5)
		cout<<"Not Weird";
	else if(n%2==0 and n>=6 and n<=20)
		cout<<"Weird";
	else
		cout<<"Not Weird";
	return 0;
}